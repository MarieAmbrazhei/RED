# 1
# Особые числа.
# Сгенерируйте список numbers, состоящий из чисел в диапазоне от 0 до 100 включительно, которые делятся без остатка как на 2, так и на 3.
# Выведите список numbers на экран.
# Ответ: [0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96]
# Решите эту задачу в 2 способа - с помощью генератора списков и без него.

# Способ 1: Используем цикл и условие
def generate_list():
    """
    Генерация списка чисел от 0 до 100 включительно,
    которые делятся без остатка на 2 и на 3, с использованием цикла.
    """
    numbers = []
    for num in range(101):
        if num % 2 == 0 and num % 3 == 0:
            numbers.append(num)
    return numbers


# Способ 2: Используем генератор списков
def generate_list_2():
    """
    Генерация списка чисел от 0 до 100 включительно,
    которые делятся без остатка на 2 и на 3, с использованием генератора списков.
    """
    numbers = [num for num in range(101) if num % 2 == 0 and num % 3 == 0]
    return numbers


print("Список, сгенерированный с использованием цикла:")
print(generate_list())

print("\nСписок, сгенерированный с использованием генератора списков:")
print(generate_list_2())


# 2
# Фильтр.
# Имеется список items = [1.2, 3, None, 100, {'info': 'bla-bla'}, 44, 'Hi!', 99, 44.32, None]
# Составьте новый список numbers, который содержит только целые числа (int) и вещественные числа (float) из списка items.
# Выведите на экран сумму чисел в numbers.
# Ответ:  291.52


# Способ 1: Используем цикл
def filtered_list(items):
    """
    Фильтрация списка: выбираем только числа (int и float).
    """
    numbers = []
    for num in items:
        if isinstance(num, (int, float)):
            numbers.append(num)
    return numbers


# Способ 2: Используем генератор списков
def filtered_list_2(items):
    """
    Фильтрация списка: выбираем только числа (int и float) с использованием генератора списков.
    """
    return [num for num in items if isinstance(num, (int, float))]


items = [1.2, 3, None, 100, {'info': 'bla-bla'}, 44, 'Hi!', 99, 44.32, None]

numbers_1 = filtered_list(items)
numbers_2 = filtered_list_2(items)

print("Список чисел (цикл):", numbers_1)
print("Сумма чисел (цикл):", sum(numbers_1))

print("\nСписок чисел (генератор списков):", numbers_2)
print("Сумма чисел (генератор списков):", sum(numbers_2))


# 3
# История сообщений.
# Создать список messages, который будет хранить “сообщения”.
# Программа должна в бесконечном цикле запрашивать у пользователя ввести сообщение (строку) с клавиатуры и сохранять ее в список messages. Причем программа должна запоминать не более 5 последних сообщений. То есть, если длина списка messages превысила 5, то первое сообщение в нем должно быть удалено.
# Если пользователь ввел “Пока”, то программа должна вывести “Ну ладно, пока!” и список последних сообщения на экран.
# Пример: если пользователь вводил такие сообщения (без кавычек): “Привет!”, “Как твои дела?”, “Как твое настроение?”, “Бла-бла-бла”, “Что нового?”, “Сори я занят”, “Пока”
# То программа должна вывести:
# Ну ладно, пока!
# ['Как твое настроение?', 'Бла-бла-бла', 'Что нового?', 'Сори я занят', 'Пока']


def generate_messages():
    messages = []
    while True:
        message = input("Введите Ваше сообщение: ").strip()
        if not message:
            print("Сообщение не может быть пустым. Попробуйте снова.")
            continue
        messages.append(message)
        if len(messages) > 5:
            messages.pop(0)
        if message == "Пока":
            print("Ну ладно, пока!")
            print(messages)
            break


generate_messages()
